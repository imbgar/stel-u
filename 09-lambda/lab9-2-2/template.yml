AWSTemplateFormatVersion: 2010-09-09
Description: 'Creates lambda resources for Stelligent-U Topic 9: Lab 9-1-2'
Resources: 
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: source
          AttributeType: S
        - AttributeName: region
          AttributeType: S 
      KeySchema:
        - AttributeName: source
          KeyType: HASH
        - AttributeName: region
          KeyType: RANGE
      TableName: bgar-log-data
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags: 
        - Key: user
          Value: brandon.garcia.labs
        - Key: stelligent-u-lesson
          Value: '9.1'
        - Key: stelligent-u-lab
          Value: '9.1.2'
  LambdaIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AllowBasicLambda
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                Resource: "arn:aws:logs:us-east-1:324320755747:*"
              - Effect: Allow
                Action: 
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action: 
                  - dynamodb:*
                Resource: "*"
              - Effect: Allow
                Action: 
                  - lambda:*
                Resource: "*"
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: bgar-stelu-lab-912
        S3Key: code.zip
      Description: bgar-stelu-lab9-1-1
      FunctionName: bgar-stelu-lab9-1-1
      Runtime: python3.8
      Handler: index.lambda_handler
      Role: !GetAtt LambdaIamRole.Arn
  S3PutTrigger:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - "AWS API Call via CloudTrail"
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName: 
            - PutObject
        requestParameters:
          bucketName: 
            - bgar-stelu-lab-912
      State: ENABLED
      Targets:
      - Arn: !GetAtt LambdaFunction.Arn
        Id: ddb_logger
  cloudTrail:
    DependsOn: TrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName: bgar-stelu-lab-912
      EventSelectors: 
        - DataResources:
            - Type: AWS::S3::Object
              Values: 
                - arn:aws:s3:::bgar-stelu-lab-912/    
          IncludeManagementEvents: Yes
          ReadWriteType: All
      IncludeGlobalServiceEvents: true
      IsLogging: true
      S3KeyPrefix: logs/
  TrailBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: bgar-stelu-lab-912
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailAclCheck
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:GetBucketAcl'
          Resource: 'arn:aws:s3:::bgar-stelu-lab-912'
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:PutObject'
          Resource: 'arn:aws:s3:::bgar-stelu-lab-912/logs/*'
Outputs:
  LambdaFunction:
    Description: The lambda function
    Value: !Ref LambdaFunction
  LambdaIamRole:
    Description: The lambda function execution role
    Value: !Ref LambdaIamRole